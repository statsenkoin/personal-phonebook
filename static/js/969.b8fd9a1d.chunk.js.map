{"version":3,"file":"static/js/969.b8fd9a1d.chunk.js","mappings":"gRAee,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACV,GAAE,CAACV,KAGF,UAAC,IAAD,CACEW,GAAI,CACFC,QAAS,CAAEC,GAAI,QACfC,WAAY,SACZC,cAAe,UAJnB,WAOE,SAAC,IAAD,CAASJ,GAAI,CAAEK,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAApC,UACE,SAAC,IAAD,CAAYC,QAAQ,KAAKR,GAAI,CAAES,WAAY,KAA3C,gCAKF,SAAC,KAAD,KAEA,SAAC,IAAD,CAAST,GAAI,CAAEK,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAApC,UACE,SAAC,IAAD,CAAYC,QAAQ,KAAKR,GAAI,CAAES,WAAY,KAA3C,wBAKDlB,EAASmB,QACR,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,QAGF,wDAEDhB,IAAcE,IAAS,wCAExB,SAAC,IAAD,CAASI,GAAI,CAAEK,MAAO,EAAGC,GAAI,EAAGC,GAAI,OAGzC,C","sources":["pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { ContactList, ContactsFilter, ContactsForm } from 'components';\n\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        display: { xs: 'flex' },\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Divider sx={{ width: 1, pt: 2, pb: 1 }}>\n        <Typography variant=\"h5\" sx={{ fontWeight: 700 }}>\n          Add new contact\n        </Typography>\n      </Divider>\n\n      <ContactsForm />\n\n      <Divider sx={{ width: 1, pt: 2, pb: 1 }}>\n        <Typography variant=\"h5\" sx={{ fontWeight: 700 }}>\n          Contacts\n        </Typography>\n      </Divider>\n\n      {contacts.length ? (\n        <>\n          <ContactsFilter />\n          <ContactList />\n        </>\n      ) : (\n        <p>No any contacts in phonebook</p>\n      )}\n      {isLoading && !error && <h2>Loading...</h2>}\n\n      <Divider sx={{ width: 1, pt: 2, pb: 1 }} />\n    </Box>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n"],"names":["Contacts","dispatch","useDispatch","contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","sx","display","xs","alignItems","flexDirection","width","pt","pb","variant","fontWeight","length"],"sourceRoot":""}